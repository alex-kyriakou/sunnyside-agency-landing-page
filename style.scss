// Reset
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
// -------------------------------------------------

// Mixins
@mixin minQuery($propertyName, $defaultValue, $mediaQueries: ()) {
  #{$propertyName}: #{$defaultValue};

  @each $breakpoint, $value in $mediaQueries {
    @media (min-width: #{$breakpoint}) {
      #{$propertyName}: #{$value};
    }
  }
}
// ---------------------------------------------------

//Screen Sizes
$sm: 375px;
$md: 800px;
$lg: 1440px;
// ---------------------------------------------------

// Font Sizes and directions
$base: 1rem;
$sizes: (
  "1": $base * 0.25,
  "2": $base * 0.5,
  "3": $base * 0.75,
  "4": $base * 1,
  "5": $base * 1.25,
  "6": $base * 1.5,
  "7": $base * 1.75,
  "8": $base * 1,
  "9": $base * 2.25,
  "10": $base * 2.5,
  "11": $base * 2.75,
  "12": $base * 3,
  "13": $base * 3.25,
  "14": $base * 3.5,
  "15": $base * 3.75,
  "16": $base * 4,
);

$directions: (
  "x": inline,
  "y": block,
  "left": inline-start,
  "right": inline-end,
  "top": block-start,
  "bottom": block-end,
);

@each $size, $sizeValue in $sizes {
  .p {
    &-#{$size} {
      padding: $sizeValue;
    }

    @each $dir, $dirValue in $directions {
      &#{$dir}-#{$size} {
        padding-#{$dirValue}: #{$sizeValue};
      }
    }
  }

  .m {
    &-#{$size} {
      margin: $sizeValue;
    }

    @each $dir, $dirValue in $directions {
      &#{dir}-#{$size} {
        margin-#{$dirValue}: #{$sizeValue};
      }
    }
  }
}
//  ------------------------------------------------------

// Displays
$displays: block, none, inline, inline-block, flex, grid;

@each $display in $displays {
  .#{$display} {
    display: #{$display};
  }
}

// --------------------------------------------------------

// Primary - Neutral Colors

$colors: (
  "red": hsl(7, 99%, 70%),
  "yellow": hsl(51, 100%, 49%),
  "green--dark": hsl(167, 40%, 24%),
  "blue": hsl(198, 62%, 26%),
  "green--light": hsl(168, 34%, 41%),
  "neutral1": hsl(212, 27%, 19%),
  "neutral2": hsl(213, 9%, 39%),
  "neutral3": hsl(232, 10%, 55%),
  "neutral4": hsl(210, 4%, 67%),
  "white": hsl(0, 0%, 100%),
);

@each $colorName, $colorValue in $colors {
  .bg {
    &-#{$colorName} {
      background-color: $colorValue;
    }
  }

  .text {
    &-#{$colorName} {
      color: $colorValue;
    }
  }
}
