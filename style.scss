// Reset
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  overflow-x: hidden;
}
// -------------------------------------------------

// Font Families
@import url("https://fonts.googleapis.com/css2?family=Barlow:ital,wght@1,600&display=swap");

@import url("https://fonts.googleapis.com/css2?family=Fraunces:opsz,wght@9..144,700;9..144,900&display=swap");

// Mixins
@mixin minQuery($propertyName, $defaultValue, $mediaQueries: ()) {
  #{$propertyName}: #{$defaultValue};

  @each $breakpoint, $value in $mediaQueries {
    @media (min-width: #{$breakpoint}) {
      #{$propertyName}: #{$value};
    }
  }
}
// ---------------------------------------------------

//Screen Sizes
$sm: 375px;
$md: 800px;
$lg: 1440px;
// ---------------------------------------------------

// Font Sizes and directions
$base: 1rem;
$sizes: (
  "1": $base * 0.25,
  "2": $base * 0.5,
  "3": $base * 0.75,
  "4": $base * 1,
  "5": $base * 1.25,
  "6": $base * 1.5,
  "7": $base * 1.75,
  "8": $base * 1,
  "9": $base * 2.25,
  "10": $base * 2.5,
  "11": $base * 2.75,
  "12": $base * 3,
  "13": $base * 3.25,
  "14": $base * 3.5,
  "15": $base * 3.75,
  "16": $base * 4,
);

$directions: (
  "x": inline,
  "y": block,
  "left": inline-start,
  "right": inline-end,
  "top": block-start,
  "bottom": block-end,
);

@each $size, $sizeValue in $sizes {
  .gap {
    &-#{$size} {
      gap: $sizeValue;
    }
  }

  .p {
    &-#{$size} {
      padding: $sizeValue;
    }

    @each $dir, $dirValue in $directions {
      &#{$dir}-#{$size} {
        padding-#{$dirValue}: #{$sizeValue};
      }
    }
  }

  .m {
    &-#{$size} {
      margin: $sizeValue;
    }

    @each $dir, $dirValue in $directions {
      &#{dir}-#{$size} {
        margin-#{$dirValue}: #{$sizeValue};
      }
    }
  }
}
//  ------------------------------------------------------

// Displays
$displays: block, none, inline, inline-block, flex, grid;

@each $display in $displays {
  .#{$display} {
    display: #{$display};
  }
}

// --------------------------------------------------------

// Positions
$positions: absolute, relative, fixed;

@each $position in $positions {
  .#{$position} {
    position: #{$position};
  }
}
// --------------------------------------------------------

// Primary - Neutral Colors

$colors: (
  "red": hsl(7, 99%, 70%),
  "yellow": hsl(51, 100%, 49%),
  "green--dark": hsl(167, 40%, 24%),
  "blue": hsl(198, 62%, 26%),
  "green--light": hsl(168, 34%, 41%),
  "neutral1": hsl(212, 27%, 19%),
  "neutral2": hsl(213, 9%, 39%),
  "neutral3": hsl(232, 10%, 55%),
  "neutral4": hsl(210, 4%, 67%),
  "white": hsl(0, 0%, 100%),
);

@each $colorName, $colorValue in $colors {
  .bg {
    &-#{$colorName} {
      background-color: $colorValue;
    }
  }

  .text {
    &-#{$colorName} {
      color: $colorValue;
    }
  }
}
// ------------------------------------------------

// Text Sizes
$textSizes: (
  "sm": clamp(0.94rem, calc(0.94rem + 0vw), 0.94rem),
  "md": clamp(1.35rem, calc(1.24rem + 0.48vw), 1.67rem),
  "lg": clamp(1.62rem, calc(1.41rem + 0.9vw), 2.22rem),
  "xl": clamp(2.33rem, calc(1.76rem + 2.43vw), 3.95rem),
  "2xl": clamp(3.36rem, calc(2.07rem + 5.49vw), 7.01rem),
);

@each $textSize, $textValue in $textSizes {
  .text {
    &-#{$textSize} {
      font-size: $textValue;
    }
  }
}
// -----------------------------------------
// Flex Wrap

.flex {
  &-wrap {
    flex-wrap: wrap;
  }
  &-wrap-reverse {
    flex-wrap: wrap-reverse;
  }
}

.text-group {
  place-items: center;
  max-width: 40ch;
}

// ------------------------------------------

// Typography
.text-center {
  text-align: center;
}

@media (min-width: $md) {
  .md\:text-center {
    text-align: left;
  }
}

// .md:text-center {
//   @include minQuery(
//     text-align,
//     center,
//     (
//       $md: left,
//     )
//   );
// }

// --------------------------------------------

img {
  max-width: 100%;
  display: block;
}

.container {
  width: 100%;
  max-width: 1350px;
  margin-inline: auto;
}

.font-header {
  font-family: "Fraunces", serif;
}
.font-body {
  font-family: "Barlow", sans-serif;
}

// Nav
nav {
  width: 100%;
  display: none;
}

// Header
header {
  @include minQuery(
    background-image,
    url(images/mobile/image-header.jpg),
    (
      $lg: url(images/desktop/image-header.jpg),
    )
  );
  background-repeat: no-repeat;
  background-position: center center;
  background-size: cover;
  min-height: 100vh;
}

.hero {
  min-height: 100vh;
  place-items: center;
  place-content: center;

  h1 {
    // margin-bottom: 7rem;
    text-transform: uppercase;
    letter-spacing: 8px;
  }
}

.brand-img {
  @include minQuery(
    background-image,
    url(images/mobile/image-transform.jpg),
    (
      $lg: url(images/desktop/image-transform.jpg),
    )
  );
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center center;
}

.aspect-square {
  aspect-ratio: 1/1;
  width: 100vw;
}
